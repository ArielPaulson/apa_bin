#!/usr/bin/perl

my ($N, $min, $max) = @ARGV[0..2];
my $replace = $ARGV[3] eq '--replace' ? 1 : 0;

open OUT, "> randomArray.R";
print OUT &script;
close OUT;

my $Rscript = 'randomArray.R';
system "R --vanilla < $Rscript > /dev/null --args $$ $N $min $max $replace";

my $tmp = "randomArray.$$.$N.$min.$max.$replace.tmp";  # generated by R script
open IN, $tmp or die "$0: Failed to open temp file '$tmp': $!\n";
print (<IN>);
close IN;

system "rm -f $Rscript";
system "rm -f $tmp";
exit;


sub script {

    ## as heredoc, in case the hardcopy gets lost

my $script = <<EOF;

x <- as.numeric(commandArgs(trailingOnly=TRUE))
M <- x[4]-x[3]+1

y <- round(runif(x[2], x[3], x[4]), 0)

if (!as.logical(x[5])) {
   if (M >= x[2]) {
      dups <- duplicated(y)
      duped <- any(dups)
      while (duped) {
      	  y[dups] <- round(runif(sum(dups), x[3], x[4]), 0)
      	  dups <- duplicated(y)
      	  duped <- any(dups)
      }
      write(y, file=paste(c("randomArray",x,"tmp"), collapse="."), ncol=1)
   } else {
      message(paste("Cannot sample",x[2],"values from",x[3],"-",x[4],"without replacement!"))
   }
} else {
   write(y, file=paste(c("randomArray",x,"tmp"), collapse="."), ncol=1)
}

EOF

return $script;
}
