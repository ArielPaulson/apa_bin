#!/usr/bin/env Rscript
library(methods)
source("/home/apa/apa_tools.R")

## (gcc)gccRccAUGG  ## https://en.wikipedia.org/wiki/Kozak_consensus_sequence

ca <- commandArgs(trailing=TRUE)
geno <- ca[1]
anno <- ca[2]
genelist <- ca[3]
heatmaps <- as.logical(ca[4])
if (is.na(heatmaps)) heatmaps <- FALSE
prefix <- paste0(geno,".",anno,".kozak")

#geno <- "nemVec1"; anno <- "EnsGen_30"; heatmaps <- FALSE  # testing

tmp.bed <- tempfile()
tmp.fa <- tempfile()

system(paste0("grep start_codon ~/bwti/",geno,"/",anno,"/",geno,".",anno,".remap.gtf | cut -f1,4,5,7,9 | perl -pe 's/; /\\t/g' | perl -pe 's/gene_id \"(\\S+)\".*transcript_id \"(\\S+)\".*/$1\t$2/' | awk -F\"\\t\" 'BEGIN { OFS=\"\\t\"} { if ($2-11>=0) print $1,$2-11,$3+10,$5\":\"$6,1,$4 }' > ",tmp.bed))
system(paste0("fastaFromBed -name -s -fi /n/data1/genomes/indexes/",geno,"/",geno,".fa -bed ",tmp.bed," -fo ",tmp.fa))
system(paste0("perl -i -pe 's/::.*//' ",tmp.fa))

seq <- read.fasta(tmp.fa)
message(paste("Loaded",length(seq),"sequences\nLengths:"))
print(table(nchar(seq)))

bed <- read.bed(tmp.bed)
bed <- bed[match(names(seq),bed[,4]),]  # order, and drop any unsequenced coordinates
bed.dup <- duplicated(bed[,1:3])
if (sum(bed.dup)>0) message(paste0("Removing ",sum(bed.dup),"/",nrow(bed)," duplicated sites"))
seq <- seq[!bed.dup]

if (!is.na(genelist)) {
    genelist <- scan(genelist, what="", sep="\n")
    bed.genes <- sub(":.*","",bed[,4])
    m <- match(genelist, bed.genes)
    bad <- m[is.na(m)]
    good <- m[!is.na(m)]
    if (length(bad)>0) {
        message(paste0(length(bad),"/",length(genelist)," genes in the gene list were not found in the source GTF file!"))
        write.vector(genelist[bad], paste0(prefix,".missing.genes.txt"))
    }
    if (length(good)>0) {
        bed <- bed[good,]
        seq <- seq[good,]
    } else {
        stop("No genes matched.")
    }
}

start <- sapply(seq, function(x) sub("^.{10}","",sub(".{10}$","",x)))
message("\nStart codons:")
print(table(start))

seq2 <- c( list(ALL=seq), split(seq,start) )
seq2m <- do.call(rbind, strsplit(seq,''))
colnames(seq2m) <- c(-10:-1,0,0,0,paste0("+",1:10))
seq2m <- c( list(ALL=seq2m), mat.split(seq2m, start) )
for (i in 2:length(seq2m)) colnames(seq2m[[i]])[11:13] <- seq2m[[i]][1,11:13]
is.ATG <- which(names(seq2)=="ATG")
non.ATG <- setdiff(2:length(seq2), is.ATG)  # also dropping 'ALL', which is always 1

title <- paste0(length(seq2$ATG)," ATG sites")

PWMs.start <- lapply(seq2, words2PSSM)
PWMs <- lapply(PWMs.start, function(x){ x[,11:13]=0.25; x })

message("Writing ATG consensus results...")
plotLogo(PWMs$ATG, paste0(prefix,".png"), title)
plotLogo(PWMs$ATG, paste0(prefix,"-zoom.png"), title, 0.5)
write.table2(PWMs.start$ATG, paste0(prefix,".pwm.txt"), row.names=qw(A,C,G,T), col.names=col.names)
if (!file.exists("kozakConsensus.R")) system("cp /home/apa/local/bin/kozakConsensus kozakConsensus.R")


if (heatmaps) {
    message("Calculating edit distances...")
    seq10 <- apply(seq2m$ATG[,c(6:10,14:18)], 1, paste, collapse="")  # only the 5bp on each side of the ATG
    system.time({ ed <- adist(seq10, counts=TRUE, fixed=TRUE, ignore.case=TRUE, costs=c(del=1E3,ins=1E3)) })  # 9 mins for test case / 15714 seqs
    message("Clustering edit distances...")
    system.time({ hc <- hclust(as.dist(ed), "average") })  # 1 min for test case
    hm <- hm2 <- seq2m$ATG[hc$order,]
    dna <- c("A","C","G","T","N")
    num <- c(1,2,3,4,NA)
    for (i in 1:5) hm2[hm2==dna[i]] <- num[i]
    mode(hm2) <- "numeric"
    rownames(hm2) <- rep("",nrow(hm2))
    png(paste0(prefix,".heatmap.png"), 500, 1215)
    mipu(hm2, pal=c(2,"gold2",3,4), show.scale=FALSE, pmar=c(3,2), las=1, main=paste0(title,", ACGT=RYGB"))
    dev.off()
}


message("kozakConsensus complete!\n")
save.image(paste0(prefix,".RData"))



## The main one
## seqLogo.title(PWMs$ATG, "ATG")

## The others
## seqLogo.title(PWMs[[ALL]], "ALL")
## for (i in non.ATG) seqLogo.title(PWMs[[i]], names(PWMs)[i])
