#!/usr/bin/env perl
require '/home/apa/local/bin/apa_routines.pm';
use Data::Dumper;
use Getopt::Long;
use Pod::Usage;
use strict;
no strict 'refs';


## Translates DNA fasta to AA
## Can select frames, default codon table, mito codon table & genes
## Returns full frame sequence; no ORF selection is made.
## All snpEff_4_3 codon tables are available.
## Also can report on codon usage.
## 


## Inputs:
my $fasta;          # assembled contig fasta, e.g.
my $outprefix;      # a prefix for all output files
my $frames = 1;     # translation mode: 1, 3, or 6 (-frame)
my $codontable;     # what codon table to use for somatic genes?  (Default 'Standard'; for others see &load_codon_tables subroutine at EOF);
my $Mcodontable;    # what codon table to use for mitochondrial genes?  (Default 'Mitochondrial'; for others see &load_codon_tables subroutine at EOF);
my $mitogenes;      # single-column headerless file with list of gene IDs that should be translated with $Mcodontable
my $usage_tables;   # write codon usage tables
my $stopnames;      # will use (o,a,p) to distinguish (ochre,amber,opal) stop codons (APPLIES TO STANDARD CODON TABLE ONLY!!)
my $print_tables;   # ONLY print codon table matrix (then exit)

GetOptions("i=s"=>\$fasta, "o=s"=>\$outprefix, "f=i"=>\$frames, "c=s"=>\$codontable, "m=s"=>\$Mcodontable, "mg=s"=>\$mitogenes, "stop-names"=>\$stopnames, "usage-tables"=>\$usage_tables, "print-tables"=>\$print_tables);

## setup
die "Fasta file '$fasta' not found!" unless -e $fasta;
my ($fname) = ($fasta =~ /([^\/]+)\.fa[sta]*$/);
($fname) = ($fasta =~ /([^\/]+)$/) unless $fname;   # unusual extension?
($outprefix = $fasta) =~ s/\.fa[sta]*$// unless $outprefix;
my $bin = '/home/apa/local/bin';         # script locations
unless ($codontable) {
    $codontable = $stopnames ? 'Standard_StopNames' : 'Standard';
}

my %codon_tables = %{ &load_codon_tables };  # populate %codon_tables; stored at end of script for cleanliness of code
&print_codon_tables if $print_tables;   # SCRIPT WILL EXIT HERE

my @framelist;
if ($frames == 1) {
    @framelist = ('+0');
} elsif ($frames == 3) {
    @framelist = ('+0','+1','+2');
} elsif ($frames == 6) {
    @framelist = ('+0','+1','+2','-0','-1','-2');
} else {
    die "$0: Translation mode '$frames' not one of 1,3,6!\n";
}

my (%data, $header, @headers, %which_table, %ctable);


## read fasta
chomp(my $now = `date`);
print "Reading fasta: $now\n";
my $FA = &open2('R', $fasta, 'Input fasta');
my $h = 0;
while (<$FA>) {
    s/[\n\r]+$//g;
    if (/^>(.*)/) {
	$header = $1;
	$h++;
#	last if $h > 100;   # TRAINING WHEELS
	push @headers, $header;		# keep things in input order
	$data{$header}{NAME} = $header;
    } else {
	$data{$header}{RAWSEQ} .= $_ if $_;
    }
}
close $FA;


## read mito-genes list, if exists
my %mitogenes;
if ($mitogenes) {
    my $MG = &open2('R', $mitogenes, 'Mito genes list');
    while (<$MG>) {
	s/[\n\r]+$//g;
	$mitogenes{$_} = 1;
    }
    close $MG;
}


## translate
chomp(my $now = `date`);
print "Translating: $now\n";
my ($tcount, $hcount) = (0, scalar keys %data);
my %results;
&local_translate($_) foreach @headers;
#die Dumper(\%data);

## prepare standard fasta output(s)
chomp(my $now = `date`);
print "Writing: $now\n";

open my $FA, "> $outprefix.translated.fasta";
foreach my $header (@headers) {
    foreach my $frame (@framelist) {
	my $fseq = ${ &blockify($data{$header}{AASEQ}{$frame}) };
	my $fhead = $frames==1 ? $header : "$header|Frame$frame";
	print $FA ">$fhead\n$fseq\n";
    }
}
close $FA;

if ($usage_tables) {
    my (%global, %G);
    my @codonlist = sort keys %{ $codon_tables{'Standard'} };
    
    open my $CUTN, "> $outprefix.codon_usage_tables.N.txt";
    print $CUTN "Header\tCodonTable\tFrame\tLength";
    print $CUTN "\t$_" foreach @codonlist;
    print $CUTN "\tambiguous\n";   # untranslatable codons
    
    open my $CUTP, "> $outprefix.codon_usage_tables.Pct.txt";
    print $CUTP "Header\tCodonTable\tFrame\tLength";
    print $CUTP "\t$_" foreach @codonlist;
    print $CUTP "\tambiguous\n";  # untranslatable codons
    
    foreach my $header (@headers) {
	my $tablename = $mitogenes{$header} ? $Mcodontable : $codontable;
	foreach my $frame (@framelist) {
	    $G{$frame} += $data{$header}{NCODON}{$frame};
	    $global{$tablename}{$frame}{AMBIGS} += $data{$header}{AMBIGS}{$frame};
	    my $line = "$header\t$tablename\t$frame\t$data{$header}{NCODON}{$frame}";
	    
	    print $CUTN $line;
	    foreach my $codon (@codonlist) {
		print $CUTN "\t",$data{$header}{CODONS}{$frame}{$codon}||0;
		$global{$tablename}{$frame}{$codon} += $data{$header}{CODONS}{$frame}{$codon};
	    }
	    print $CUTN "\t",$data{$header}{AMBIGS}{$frame}||0,"\n";
	    
	    print $CUTP $line;
	    foreach my $codon (@codonlist) {
		print $CUTP sprintf("\t%0.4f",($data{$header}{CODONS}{$frame}{$codon}||0)/$data{$header}{NCODON}{$frame});
	    }
	    print $CUTP sprintf("\t%0.4f\n",($data{$header}{AMBIGS}{$frame}||0)/$data{$header}{NCODON}{$frame});
	}
    }
    
    foreach my $tablename (sort keys %global) {
	foreach my $frame (@framelist) {
	    my $line = "GLOBAL\t$tablename\t$frame\t$G{$frame}";
	    
	    print $CUTN $line;
	    foreach my $codon (@codonlist, 'AMBIGS') {
		print $CUTN "\t",$global{$tablename}{$frame}{$codon}||0;
	    }
	    print $CUTN "\n";
	    
	    print $CUTP $line;
	    foreach my $codon (@codonlist, 'AMBIGS') {
		print $CUTP sprintf("\t%0.4f",($global{$tablename}{$frame}{$codon}||0)/$G{$frame});
	    }
	    print $CUTP "\n";
	}
    }
    
    close $CUTN;
    close $CUTP;
}

chomp(my $now = `date`);
print "$0 complete! $now\n";
exit;







#########################################################  SUBROUTINES  #########################################################
#########################################################  SUBROUTINES  #########################################################
#########################################################  SUBROUTINES  #########################################################
#########################################################  SUBROUTINES  #########################################################
#########################################################  SUBROUTINES  #########################################################







### translation, ORF detection
sub local_translate {

    my $header = shift;
    $tcount++;
    print " $tcount/$hcount\n" if $tcount % 1000 == 0;

    my %frameseq;
    my $mrna = $data{$header}{RAWSEQ};
    my $table = $mitogenes{$header} ? $Mcodontable : $codontable;
    
    # preprocess sequence
    $mrna =~ s/^\s+//;	    # clip leading whitespace
    $mrna =~ s/\s+$//;      # clip trailing whitespace
    $mrna =~ s/(.*)/\U$1/;  # all caps
    $mrna =~ s/U/T/g;	    # RNA->DNA
    
    # create separate sequence per frame
    $frameseq{'+0'} = $mrna;
    my @jsplit = split //, $mrna;
    if ($frames > 1) {
	$frameseq{'+1'} = join '', @jsplit[1..$#jsplit];
	$frameseq{'+2'} = join '', @jsplit[2..$#jsplit];
    }
    
    # prep for translation mode
    if ($frames == 6) {
	$frameseq{'-0'} = ${ &revcomp($mrna) };
	my $temp1 = join '', @jsplit[0..$#jsplit-1];
	my $temp2 = join '', @jsplit[0..$#jsplit-2];
	$frameseq{'-1'} = ${ &revcomp($temp1) };
	$frameseq{'-2'} = ${ &revcomp($temp2) };
    }
    
    # translate each specified frame
    foreach my $frame (@framelist) {
	
	## setup
	my $seqlen = length($frameseq{$frame});
	my $startmax = int($seqlen/3);  # will never exceed $seqlen
	
	## convert codons
	foreach my $C (0..$startmax) {   # one start per codon
	    my $start = $C * 3;
	    if ($start >= $seqlen) {
		## the end of the sequence -- bye
	    } else {
		## not yet reached the end of the sequence
		my $codon = substr($frameseq{$frame}, $start, 3);
		if (abs($seqlen-$start) <= 2) {  # end of _translatable_ sequence; if 1 or 2 extra NTs, pad with Ns and "translate"
		    my $crop = $seqlen - $start;
		    $codon .= 'N' x $crop;  # pad missing NTs with Ns
		}
		my $residue = exists $codon_tables{$table}{$codon} ? $codon_tables{$table}{$codon} : 'X'; 
		$data{$header}{CODONS}{$frame}{$codon}++;
		$data{$header}{RESIDS}{$frame}{$residue}++;
		$data{$header}{AASEQ}{$frame} .= $residue;
		$data{$header}{AMBIGS}{$frame}++ if $residue eq 'X';
		$data{$header}{NCODON}{$frame}++;  # total codon count
	    }
	}
    }
}


### print matrix of codon tables, then exit
sub print_codon_tables {
	
    my @tablenames = sort keys %codon_tables;
    my @codons = sort keys %{ $codon_tables{Standard} };
    open OUT, "> fastaTranslate.all_codon_tables.txt";
    print OUT join("\t", 'snpEff_Table', @codons), "\n";
    foreach my $table (@tablenames) {
	print OUT join("\t", $table, map { $codon_tables{$table}{$_} } @codons), "\n";
    }
    close OUT;
    exit;
    
}


### codon -> AA, in all different ways
sub load_codon_tables {
    
    ## All tables taken from snpEff v4_3
    ## Code used to create hashes below:
    ## grep "^codon" /n/data1/genomes/bowtie-index/snpEff/current/snpEff.config | sed 's/^codon.//' > x
    ## perl -i -pe 's/^(\S+)\s+: /},\n\t"$1" => {\n/' x
    ## perl -i -pe 's/([ACGT]{3})\/([^,]+),/\t\t"$1" => "$2",\n/g' x
    ## perl -i -pe 's/([ACGT]{3})\/([^,]+)[\n\r]+$/\t\t"$1" => "$2"\n/' x
    ## 'x' now contains the lines between '%codon_tables = (' and ');'
    ## lines below have been shortened by putting 4 codon defs per line
    ## 'Standard_StopNames' table is 'Standard' modified by replacing the three stop '*' with {c,a,p} indicating {ochre,amber,opal}.
    ## '+' symbols have been retained for reference, and are removed before exporting the table/
    
    my %CTEMP = (
	
	'Standard' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L', 'TTG' => 'L+',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => '*', 'TAG' => '*',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => '*', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L+',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I', 'ATC' => 'I', 'ATA' => 'I', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'K', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'R', 'AGG' => 'R',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Standard_StopNames' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L', 'TTG' => 'L+',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => 'c', 'TAG' => 'a',  # c=ochre, a=amber
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => 'p', 'TGG' => 'W',  # p=opal
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L+',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I', 'ATC' => 'I', 'ATA' => 'I', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'K', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'R', 'AGG' => 'R',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Vertebrate_Mitochondrial' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L', 'TTG' => 'L',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => '*', 'TAG' => '*',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => 'W', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I+', 'ATC' => 'I+', 'ATA' => 'M+', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'K', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => '*', 'AGG' => '*',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V+',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Yeast_Mitochondrial' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L', 'TTG' => 'L',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => '*', 'TAG' => '*',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => 'W', 'TGG' => 'W',
	    'CTT' => 'T', 'CTC' => 'T', 'CTA' => 'T', 'CTG' => 'T',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I', 'ATC' => 'I', 'ATA' => 'M+', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'K', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'R', 'AGG' => 'R',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Mold_Mitochondrial' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L+', 'TTG' => 'L+',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => '*', 'TAG' => '*',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => 'W', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L+',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I+', 'ATC' => 'I+', 'ATA' => 'I+', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'K', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'R', 'AGG' => 'R',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V+',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Protozoan_Mitochondrial' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L+', 'TTG' => 'L+',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => '*', 'TAG' => '*',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => 'W', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L+',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I+', 'ATC' => 'I+', 'ATA' => 'I+', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'K', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'R', 'AGG' => 'R',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V+',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Coelenterate' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L+', 'TTG' => 'L+',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => '*', 'TAG' => '*',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => 'W', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L+',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I+', 'ATC' => 'I+', 'ATA' => 'I+', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'K', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'R', 'AGG' => 'R',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V+',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Mitochondrial' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L+', 'TTG' => 'L+',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => '*', 'TAG' => '*',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => 'W', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L+',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I+', 'ATC' => 'I+', 'ATA' => 'I+', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'K', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'R', 'AGG' => 'R',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V+',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Mycoplasma' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L+', 'TTG' => 'L+',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => '*', 'TAG' => '*',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => 'W', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L+',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I+', 'ATC' => 'I+', 'ATA' => 'I+', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'K', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'R', 'AGG' => 'R',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V+',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Spiroplasma' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L+', 'TTG' => 'L+',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => '*', 'TAG' => '*',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => 'W', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L+',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I+', 'ATC' => 'I+', 'ATA' => 'I+', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'K', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'R', 'AGG' => 'R',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V+',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Invertebrate_Mitochondrial' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L', 'TTG' => 'L+',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => '*', 'TAG' => '*',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => 'W', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I+', 'ATC' => 'I+', 'ATA' => 'M+', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'K', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'S', 'AGG' => 'S',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V+',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Ciliate_Nuclear' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L', 'TTG' => 'L',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => 'Q', 'TAG' => 'Q',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => '*', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I', 'ATC' => 'I', 'ATA' => 'I', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'K', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'R', 'AGG' => 'R',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Dasycladacean_Nuclear' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L', 'TTG' => 'L',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => 'Q', 'TAG' => 'Q',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => '*', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I', 'ATC' => 'I', 'ATA' => 'I', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'K', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'R', 'AGG' => 'R',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Hexamita_Nuclear' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L', 'TTG' => 'L',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => 'Q', 'TAG' => 'Q',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => '*', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I', 'ATC' => 'I', 'ATA' => 'I', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'K', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'R', 'AGG' => 'R',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Echinoderm_Mitochondrial' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L', 'TTG' => 'L',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => '*', 'TAG' => '*',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => 'W', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I', 'ATC' => 'I', 'ATA' => 'I', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'N', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'S', 'AGG' => 'S',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V+',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Flatworm_Mitochondrial' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L', 'TTG' => 'L',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => '*', 'TAG' => '*',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => 'W', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I', 'ATC' => 'I', 'ATA' => 'I', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'N', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'S', 'AGG' => 'S',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V+',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Euplotid_Nuclear' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L', 'TTG' => 'L',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => '*', 'TAG' => '*',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => 'C', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I', 'ATC' => 'I', 'ATA' => 'I', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'K', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'R', 'AGG' => 'R',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Bacterial_and_Plant_Plastid' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L', 'TTG' => 'L+',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => '*', 'TAG' => '*',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => '*', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L+',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I+', 'ATC' => 'I+', 'ATA' => 'I+', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'K', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'R', 'AGG' => 'R',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V+',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Alternative_Yeast_Nuclear' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L', 'TTG' => 'L',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => '*', 'TAG' => '*',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => '*', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'S+',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I', 'ATC' => 'I', 'ATA' => 'I', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'K', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'R', 'AGG' => 'R',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Ascidian_Mitochondrial' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L', 'TTG' => 'L+',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => '*', 'TAG' => '*',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => 'W', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I', 'ATC' => 'I', 'ATA' => 'M+', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'K', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'G', 'AGG' => 'G',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V+',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Alternative_Flatworm_Mitochondrial' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L', 'TTG' => 'L',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => 'Y', 'TAG' => '*',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => 'W', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I', 'ATC' => 'I', 'ATA' => 'I', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'N', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'S', 'AGG' => 'S',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Blepharisma_Macronuclear' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L', 'TTG' => 'L',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => '*', 'TAG' => 'Q',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => '*', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I', 'ATC' => 'I', 'ATA' => 'I', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'K', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'R', 'AGG' => 'R',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Chlorophycean_Mitochondrial' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L', 'TTG' => 'L',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => '*', 'TAG' => 'L',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => '*', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I', 'ATC' => 'I', 'ATA' => 'I', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'K', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'R', 'AGG' => 'R',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Trematode_Mitochondrial' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L', 'TTG' => 'L',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => '*', 'TAG' => '*',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => 'W', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I', 'ATC' => 'I', 'ATA' => 'M', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'N', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'S', 'AGG' => 'S',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V+',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Scenedesmus_obliquus_Mitochondrial' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => 'L', 'TTG' => 'L',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => '*', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => '*', 'TAG' => 'L',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => '*', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I', 'ATC' => 'I', 'ATA' => 'I', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'K', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'R', 'AGG' => 'R',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	},
	'Thraustochytrium_Mitochondrial' => {
	    'TTT' => 'F', 'TTC' => 'F', 'TTA' => '*', 'TTG' => 'L',
	    'TCT' => 'S', 'TCC' => 'S', 'TCA' => 'S', 'TCG' => 'S',
	    'TAT' => 'Y', 'TAC' => 'Y', 'TAA' => '*', 'TAG' => '*',
	    'TGT' => 'C', 'TGC' => 'C', 'TGA' => '*', 'TGG' => 'W',
	    'CTT' => 'L', 'CTC' => 'L', 'CTA' => 'L', 'CTG' => 'L',
	    'CCT' => 'P', 'CCC' => 'P', 'CCA' => 'P', 'CCG' => 'P',
	    'CAT' => 'H', 'CAC' => 'H', 'CAA' => 'Q', 'CAG' => 'Q',
	    'CGT' => 'R', 'CGC' => 'R', 'CGA' => 'R', 'CGG' => 'R',
	    'ATT' => 'I+', 'ATC' => 'I', 'ATA' => 'I', 'ATG' => 'M+',
	    'ACT' => 'T', 'ACC' => 'T', 'ACA' => 'T', 'ACG' => 'T',
	    'AAT' => 'N', 'AAC' => 'N', 'AAA' => 'K', 'AAG' => 'K',
	    'AGT' => 'S', 'AGC' => 'S', 'AGA' => 'R', 'AGG' => 'R',
	    'GTT' => 'V', 'GTC' => 'V', 'GTA' => 'V', 'GTG' => 'V+',
	    'GCT' => 'A', 'GCC' => 'A', 'GCA' => 'A', 'GCG' => 'A',
	    'GAT' => 'D', 'GAC' => 'D', 'GAA' => 'E', 'GAG' => 'E',
	    'GGT' => 'G', 'GGC' => 'G', 'GGA' => 'G', 'GGG' => 'G'
	}
    );
    
    ## remove '+' symbols
    foreach my $table (keys %CTEMP) {
	foreach my $codon (keys %{ $CTEMP{$table} }) {
	    $CTEMP{$table}{$codon} =~ s/\+$//;
	}
    }
    
    return \%CTEMP;
}



## Description of $handlefile:
## 1. Optional file, enables sequence-specific translation behaviors.  If missing, all sequences get the default treatment, given the command line params.
## 2. 2+ columns, 1 row per sequence, tab delimited; column 1 must be the sequence ID (and must match fasta header).
## 3. Not all sequences in input fasta need to be present; if any are absent, they will be assigned default values for each column.
## 4. HEADER IS REQUIRED; only certain column names are recognized (case sensitive; others are ignored), which are:
##    A. "CodonTable": column contains names of snpEff codon tables to use per sequence, values may be:  
##       i.  "Standard", usually (this is default, if missing).
##       ii. Other values are keys of %codon_tables; see &load_codon_tables subroutine above.
##       This column is chiefly used to toggle between Standard and mitochondrial tables.
##    B. "Frames": column with 1, 3, or 6.  If present, overrides value of -t for that sequence only.
##    C. "Strategy": column of translation strategies to use per sequence.  Values may be:
##       i.   "MaxOrf": default strategy; returns the longest ORF(s) across all indicated frames.
##       ii.  "FrameMaxOrf": returns the longest ORF(s) for each indicated frame.
##       iii. "FullFrame": returns the entire AA translation for each indicated frame, stops and all.
##       iv.  "StartFrame": same as "FullFrame" but sequence begins with the first start codon. 
##       v.   "MaxFrame": returns the entire AA translation for the frame(s) with the longest ORF(s).
##    D. "AltStart": column with comma-separated list of alternate start codons to allow, e.g. "ATC,TTG".  If "*", all non-stop codons are allowed.
##    E. "Incomplete": column wth 5/3/53/0 indicating if the *CODING SEQUENCE* is 5'-incomplete, 3'-incomplete, both, or neither (informs ORF detection).
##    F. "MicroORF": column with 1/0 indicating if min-ORF-length restrictions should be ignored.

## future: force ORF starts/stops, ignore stop codon at position X, allow leaky stops -> multiple outcome sequences, ...?


