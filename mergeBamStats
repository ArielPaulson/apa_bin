#!/usr/bin/env perl
use Getopt::Long;
use Pod::Usage;
use strict;

## Merges multiple bam_stats.txt output into one table
# Deps:

## Inputs
my $out;       # output file
my @inputs;    # list of dataset files (arguments left over from GetOptions)
my $dirname;   # use dataset file directory for column name? (otherwise, filename as given)
my $nodirname; # remove dataset file directory from file name to create column name? (otherwise, filename as given)
my $strip;     # any other substring (regexp) to remove from dataset file name during column name conversion

GetOptions(
    "o=s" => \$out, 
    "strip=s" => \$strip, 
    "dirname" => \$dirname, 
    "nodirname" => \$nodirname
    );

@inputs = @ARGV;

## Globals
my @names;   # filenames (become rownames)
my %matrix;  # data matrix
my @header;  # output header

## Main

open my $OUT, '>', $out or die "$0: Cannot write to output file '$out': $!\n";

foreach my $i (0..$#inputs) {
    my $file = $inputs[$i];
    
    # decide on sample name
    my $name;
    if ($dirname) {
	($name) = ($file =~ /([^\/]+)\/[^\/]+$/);  # only the file's parent directory
    } elsif ($nodirname) {
	($name) = ($file =~ /([^\/]+)$/);  # only the file's name
    } else {
	$name = $file;  # file's path as given
    }
    $name =~ s/$strip//;
    push @names, $name;
    
    # read matrix; extract key=>value pairs
    open my $IN, '<', $file or die "$0: Cannot read matrix file '$file': $!\n";
    while (<$IN>) {
	s/[\n\r]+$//;
	if ($. == 1) {
	    @header = split;
	} elsif ($. == 2) {
	    @{ $matrix{$name} } = split;
	}
    }
    close $IN;
}
unshift @header, 'source';

# write all-sample matrix
print $OUT join("\t", @header), "\n";
print $OUT join("\t", $_, @{ $matrix{$_} }), "\n" foreach @names;
close $OUT;
exit;
