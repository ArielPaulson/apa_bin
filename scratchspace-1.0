#!/usr/bin/perl

my %specials = map {($_=>1)} qw/ bioinfo apache /;  # users of interest that are not 3-char acronyms like 'apa'
my %ordscale = (K,1E3, M,1E6, G,1E9, T,1E12);

chdir '/scratch' or die "Cannot cd to scratch: $!\n";
foreach (glob "*") {
    push @userdirs, $_ if (-d $_ && $_ =~ /^[A-Za-z0-9]{3}$/);
    push @userdirs, $_ if (-d $_ && $specials{$_});
}

my $maxN;
foreach my $user (@userdirs) {
    my $maxuser = length($user) if length($user) > $maxuser;
    chomp(my $du = `du -sh $user | tail -1 | cut -f1`);
    my ($N, $ord) = ($du =~ /^([\d.]+)([KMGT])/);
    $N = int($N);
    $ranked{$ord}{$N}{$user} = 1;
    $true{$user} = $N * $ordscale{$ord};
    $maxN = length($N) if length($N) > $maxN;
}
$maxN++;  # to account for $ord character

chomp(@df = `df -h .`);
#my $header = join "\t", (split /\s+/, $df[0])[(2,1,3,4,5)];
my @df2 = (split /\s+/, $df[2]);
my ($totalN, $totalord) = ($df2[1] =~ /^([\d.]+)([KGMT])$/);
my $total = $totalN * $ordscale{$totalord};
$maxN = length($df2[2]) if length($df2[2]) > $maxN;
printf "\n\t%${maxN}s\t%s\t%s\t%s\n", qw/ Used Use% Total Free /;
printf "TOTAL\t%${maxN}s\t%3.0f%\t%s\t%s\n", @df2[(2,4,1,3)];

foreach my $ord (qw/ T G M K /) {
    foreach my $N (sort {$b <=> $a} keys %{ $ranked{$ord} }) {
	printf "%${maxuser}s\t%${maxN}s\t%3.0f%\n", $_, "$N$ord", 100*$true{$_}/$total foreach (sort keys %{ $ranked{$ord}{$N} });
    }
}
print "\n";
exit;
